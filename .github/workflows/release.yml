# .github/workflows/release.yml

name: Release Package to GitHub Packages

on:
  # This workflow runs automatically when a new tag starting with 'v' is pushed.
  # Example: git tag v1.0.0 && git push origin v1.0.0
  push:
    tags:
      - 'v*.*.*'

  # This allows you to run the workflow manually from the Actions tab for testing.
  workflow_dispatch:

jobs:
  release:
    name: Build and Publish Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating a GitHub Release
      packages: write # Required for publishing to GitHub Packages

    steps:
      # 1. Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Node.js environment
      # This step configures Node.js and sets up authentication for GitHub Packages.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          # This URL is crucial for publishing to GitHub Packages
          registry-url: 'https://npm.pkg.github.com/'
          # The scope is automatically read from your package.json name field
          # (e.g., @your-username/package-name)

      # 3. Install project dependencies
      # 'npm ci' is recommended for CI environments as it uses the package-lock.json
      # for deterministic builds.
      - name: Install dependencies
        run: npm ci

      # 4. Run tests to ensure the release is stable
      - name: Run tests
        run: npm run test:run

      # 5. Build the package for production
      - name: Build package
        run: npm run build

      # 6. Publish the package to GitHub Packages
      # The NODE_AUTH_TOKEN is automatically set to the GITHUB_TOKEN secret.
      # This token has the necessary permissions to publish to the registry.
      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 7. Create a GitHub Release for the new version tag
      # This makes it easy for users to see what's new in each version.
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The tag_name is automatically derived from the Git tag that triggered the workflow
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            See the [CHANGELOG.md](CHANGELOG.md) for details on what's new in this version.
          draft: false
          prerelease: false
